[
    {
        "id": "a9cf961a3a52160c",
        "type": "tab",
        "label": "Isolation Gowns",
        "disabled": false,
        "info": "",
        "env": []
    },
    {
        "id": "a1f23e7f9e7ee37e",
        "type": "ui_base",
        "theme": {
            "name": "theme-light",
            "lightTheme": {
                "default": "#0094CE",
                "baseColor": "#0094CE",
                "baseFont": "-apple-system,BlinkMacSystemFont,Segoe UI,Roboto,Oxygen-Sans,Ubuntu,Cantarell,Helvetica Neue,sans-serif",
                "edited": true,
                "reset": false
            },
            "darkTheme": {
                "default": "#097479",
                "baseColor": "#097479",
                "baseFont": "-apple-system,BlinkMacSystemFont,Segoe UI,Roboto,Oxygen-Sans,Ubuntu,Cantarell,Helvetica Neue,sans-serif",
                "edited": false
            },
            "customTheme": {
                "name": "Untitled Theme 1",
                "default": "#4B7930",
                "baseColor": "#4B7930",
                "baseFont": "-apple-system,BlinkMacSystemFont,Segoe UI,Roboto,Oxygen-Sans,Ubuntu,Cantarell,Helvetica Neue,sans-serif"
            },
            "themeState": {
                "base-color": {
                    "default": "#0094CE",
                    "value": "#0094CE",
                    "edited": false
                },
                "page-titlebar-backgroundColor": {
                    "value": "#0094CE",
                    "edited": false
                },
                "page-backgroundColor": {
                    "value": "#fafafa",
                    "edited": false
                },
                "page-sidebar-backgroundColor": {
                    "value": "#ffffff",
                    "edited": false
                },
                "group-textColor": {
                    "value": "#1bbfff",
                    "edited": false
                },
                "group-borderColor": {
                    "value": "#ffffff",
                    "edited": false
                },
                "group-backgroundColor": {
                    "value": "#ffffff",
                    "edited": false
                },
                "widget-textColor": {
                    "value": "#111111",
                    "edited": false
                },
                "widget-backgroundColor": {
                    "value": "#0094ce",
                    "edited": false
                },
                "widget-borderColor": {
                    "value": "#ffffff",
                    "edited": false
                },
                "base-font": {
                    "value": "-apple-system,BlinkMacSystemFont,Segoe UI,Roboto,Oxygen-Sans,Ubuntu,Cantarell,Helvetica Neue,sans-serif"
                }
            },
            "angularTheme": {
                "primary": "indigo",
                "accents": "blue",
                "warn": "red",
                "background": "grey",
                "palette": "light"
            }
        },
        "site": {
            "name": "Node-RED Dashboard",
            "hideToolbar": "false",
            "allowSwipe": "false",
            "lockMenu": "false",
            "allowTempTheme": "true",
            "dateFormat": "DD/MM/YYYY",
            "sizes": {
                "sx": 48,
                "sy": 48,
                "gx": 6,
                "gy": 6,
                "cx": 6,
                "cy": 6,
                "px": 0,
                "py": 0
            }
        }
    },
    {
        "id": "b582df30a9d2445c",
        "type": "debug",
        "z": "a9cf961a3a52160c",
        "name": "",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 570,
        "y": 500,
        "wires": []
    },
    {
        "id": "d77006acee54af34",
        "type": "http in",
        "z": "a9cf961a3a52160c",
        "name": "Form",
        "url": "/isolationgowns/login",
        "method": "post",
        "upload": false,
        "swaggerDoc": "",
        "x": 50,
        "y": 200,
        "wires": [
            [
                "01f2e8dd1ac14440"
            ]
        ]
    },
    {
        "id": "d4b609db9190632b",
        "type": "function",
        "z": "a9cf961a3a52160c",
        "name": "Retrieve id",
        "func": "// Read the payload\nmsg.credentials = {};\nmsg.credentials.token = msg.payload.data.login.token;\n\n\n// Reset the headears\nmsg.headers = {};\nmsg.headers['content-type'] = 'application/json';\nmsg.headers['authorization'] = \"Bearer \" + msg.credentials.token;\n\n// These are already set and payload is not valid anymore\n// msg.url = msg.payload.endpoint;\n// msg.method = 'POST';\n\n\n// This is going to destroy the msg.payload!!!\nmsg.payload = JSON.stringify({\n  query: `query{\n            myAgent{\n                id\n            }\n          }`,\n  variables: {}\n})\n\n\nreturn msg;\n\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 570,
        "y": 200,
        "wires": [
            [
                "232a28ed71fceec6"
            ]
        ]
    },
    {
        "id": "01f2e8dd1ac14440",
        "type": "function",
        "z": "a9cf961a3a52160c",
        "name": "Login Agent",
        "func": "\n\nmsg.headers = {};\nmsg.headers['content-type'] = 'application/json';\n\nmsg.url = msg.payload.endpoint;\nmsg.method = 'POST';\n\n// This is going to destroy the msg.payload!!!\nmsg.payload = JSON.stringify({\n  query: `mutation doLogin($username: String!, $password: String!) {\n            login(emailOrUsername: $username, password: $password) {\n                token\n            }\n          }`,\n  variables: {\"username\": msg.payload.username,\n              \"password\": msg.payload.password}\n})\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 210,
        "y": 200,
        "wires": [
            [
                "ced9f63df845af74"
            ]
        ]
    },
    {
        "id": "ced9f63df845af74",
        "type": "http request",
        "z": "a9cf961a3a52160c",
        "name": "",
        "method": "use",
        "ret": "obj",
        "paytoqs": "ignore",
        "url": "",
        "tls": "",
        "persist": false,
        "proxy": "",
        "authType": "",
        "senderr": false,
        "x": 370,
        "y": 200,
        "wires": [
            [
                "d4b609db9190632b"
            ]
        ]
    },
    {
        "id": "232a28ed71fceec6",
        "type": "http request",
        "z": "a9cf961a3a52160c",
        "name": "",
        "method": "use",
        "ret": "obj",
        "paytoqs": "ignore",
        "url": "",
        "tls": "",
        "persist": false,
        "proxy": "",
        "authType": "",
        "senderr": false,
        "x": 770,
        "y": 200,
        "wires": [
            [
                "bbeba4dd2bc281e6"
            ]
        ]
    },
    {
        "id": "6b9a303ec68aaf47",
        "type": "function",
        "z": "a9cf961a3a52160c",
        "name": "Create Unit",
        "func": "// Reset the headears\nmsg.headers = {};\nmsg.headers['content-type'] = 'application/json';\nmsg.headers['authorization'] = \"Bearer \" + msg.payload.token;\n\n\nmsg.url = msg.payload.endpoint;\nmsg.method = 'POST';\n\nconst label = msg.payload.label;\nconst symbol = msg.payload.symbol;\n\n// This is going to destroy the msg.payload!!!\nmsg.payload = JSON.stringify({\n  query: `mutation($unit:UnitCreateParams!) {\n            createUnit(unit: $unit) {\n                unit {\n                    id\n                }\n            }\n          }`,\n  variables: {\"unit\": {\n                        \"label\": label,\n                        \"symbol\": symbol\n                        }\n            }\n})\n\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 210,
        "y": 360,
        "wires": [
            [
                "41a31f091965c362"
            ]
        ]
    },
    {
        "id": "41a31f091965c362",
        "type": "http request",
        "z": "a9cf961a3a52160c",
        "name": "",
        "method": "use",
        "ret": "obj",
        "paytoqs": "ignore",
        "url": "",
        "tls": "",
        "persist": false,
        "proxy": "",
        "authType": "",
        "senderr": false,
        "x": 410,
        "y": 360,
        "wires": [
            [
                "8aafa40d09d8bbe7"
            ]
        ]
    },
    {
        "id": "8aafa40d09d8bbe7",
        "type": "change",
        "z": "a9cf961a3a52160c",
        "name": "Set Unit",
        "rules": [
            {
                "t": "set",
                "p": "unit",
                "pt": "flow",
                "to": "payload.data.createUnit.unit.id",
                "tot": "msg",
                "dc": true
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 580,
        "y": 360,
        "wires": [
            [
                "7e3394bb6ca1da06"
            ]
        ]
    },
    {
        "id": "cae81b35069f60a9",
        "type": "function",
        "z": "a9cf961a3a52160c",
        "name": "Create Location",
        "func": "// Reset the headears\nmsg.headers = {};\nmsg.headers['content-type'] = 'application/json';\nmsg.headers['authorization'] = \"Bearer \" + msg.payload.token;\n\nmsg.url = msg.payload.endpoint;\nmsg.method = 'POST';\n\nconst name = msg.payload.name;\nconst lat = msg.payload.lat;\nconst long = msg.payload.long;\nconst addr = msg.payload.addr;\nconst note = msg.payload.note;\n\n\n// This is going to destroy the msg.payload!!!\nmsg.payload = JSON.stringify({\n    query: `mutation($location: SpatialThingCreateParams!) {\n            createSpatialThing(spatialThing: $location) {\n                spatialThing {\n                    id\n                }\n            }\n        }`,\n    variables: {\n        \"location\": {\n            \"name\": name,\n            \"alt\": 0,\n            \"lat\": lat,\n            \"long\": long,\n            \"mappableAddress\": addr,\n            \"note\": note\n        }\n    }\n})\n\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 220,
        "y": 280,
        "wires": [
            [
                "cd0d405b431a7cdc"
            ]
        ]
    },
    {
        "id": "cd0d405b431a7cdc",
        "type": "http request",
        "z": "a9cf961a3a52160c",
        "name": "",
        "method": "use",
        "ret": "obj",
        "paytoqs": "ignore",
        "url": "",
        "tls": "",
        "persist": false,
        "proxy": "",
        "authType": "",
        "senderr": false,
        "x": 410,
        "y": 280,
        "wires": [
            [
                "122698bde7168a3b"
            ]
        ]
    },
    {
        "id": "e7f96084acdd0aa2",
        "type": "function",
        "z": "a9cf961a3a52160c",
        "name": "Create Process",
        "func": "// Reset the headears\nmsg.headers = {};\nmsg.headers['content-type'] = 'application/json';\nmsg.headers['authorization'] = \"Bearer \" + msg.payload.token;\n\n\nmsg.url = msg.payload.endpoint;\nmsg.method = 'POST';\n\nconst name = msg.payload.process_name;\nconst note = msg.payload.process_note;\n\nconst ts = new Date(Date.now());\n\n// This is going to destroy the msg.payload!!!\nmsg.payload = JSON.stringify({\n  query: `mutation($process:ProcessCreateParams!) {\n\t  createProcess(process: $process) {\n\t\tprocess {\n\t\t  id\n\t\t}\n\t  }\n\t}\n`,\n  variables: {\n      \"process\": {\n        \"name\": name,\n        \"note\": note,\n        \"hasBeginning\": ts,\n        \"hasEnd\": ts\n      }\n  }\n})\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 220,
        "y": 580,
        "wires": [
            [
                "cf36936a5c75bfd6"
            ]
        ]
    },
    {
        "id": "6196df0943914213",
        "type": "http response",
        "z": "a9cf961a3a52160c",
        "name": "",
        "statusCode": "",
        "headers": {},
        "x": 1150,
        "y": 200,
        "wires": []
    },
    {
        "id": "bbeba4dd2bc281e6",
        "type": "function",
        "z": "a9cf961a3a52160c",
        "name": "Format Reply",
        "func": "// Read the payload\nmsg.credentials.id = msg.payload.data.myAgent.id;\n\n// Provide an answer\nmsg.payload = {};\nmsg.payload.token = msg.credentials.token;\nmsg.payload.id = msg.credentials.id;\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 980,
        "y": 200,
        "wires": [
            [
                "6196df0943914213"
            ]
        ]
    },
    {
        "id": "62143c0efd3e2261",
        "type": "http in",
        "z": "a9cf961a3a52160c",
        "name": "Form",
        "url": "/isolationgowns/location",
        "method": "post",
        "upload": false,
        "swaggerDoc": "",
        "x": 50,
        "y": 280,
        "wires": [
            [
                "cae81b35069f60a9"
            ]
        ]
    },
    {
        "id": "85edf2b45871f9bd",
        "type": "http response",
        "z": "a9cf961a3a52160c",
        "name": "",
        "statusCode": "",
        "headers": {},
        "x": 830,
        "y": 280,
        "wires": []
    },
    {
        "id": "122698bde7168a3b",
        "type": "function",
        "z": "a9cf961a3a52160c",
        "name": "Format Reply",
        "func": "// Read the payload\nconst location = msg.payload.data.createSpatialThing.spatialThing.id;\n\nmsg.payload = {};\nmsg.payload.location = location;\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 640,
        "y": 280,
        "wires": [
            [
                "85edf2b45871f9bd"
            ]
        ]
    },
    {
        "id": "cf3e88999b724618",
        "type": "comment",
        "z": "a9cf961a3a52160c",
        "name": "Perform Login",
        "info": "",
        "x": 70,
        "y": 140,
        "wires": []
    },
    {
        "id": "9927f0b45d15344b",
        "type": "http in",
        "z": "a9cf961a3a52160c",
        "name": "Form",
        "url": "/isolationgowns/unit",
        "method": "post",
        "upload": false,
        "swaggerDoc": "",
        "x": 50,
        "y": 360,
        "wires": [
            [
                "6b9a303ec68aaf47"
            ]
        ]
    },
    {
        "id": "7e3394bb6ca1da06",
        "type": "function",
        "z": "a9cf961a3a52160c",
        "name": "Format Reply",
        "func": "// Read the payload\nconst unit = msg.payload.data.createUnit.unit.id;\n\nmsg.payload = {};\nmsg.payload.unit = unit;\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 780,
        "y": 360,
        "wires": [
            [
                "71f92c67ca67af48"
            ]
        ]
    },
    {
        "id": "71f92c67ca67af48",
        "type": "http response",
        "z": "a9cf961a3a52160c",
        "name": "",
        "statusCode": "",
        "headers": {},
        "x": 930,
        "y": 360,
        "wires": []
    },
    {
        "id": "72c05c5c0bd10d12",
        "type": "http response",
        "z": "a9cf961a3a52160c",
        "name": "",
        "statusCode": "",
        "headers": {},
        "x": 890,
        "y": 440,
        "wires": []
    },
    {
        "id": "04c370bd35360547",
        "type": "function",
        "z": "a9cf961a3a52160c",
        "name": "Format Reply",
        "func": "const eventId = msg.payload.data.createEconomicEvent.economicEvent.id;\nconst resourceIn = msg.payload.data.createEconomicEvent.economicEvent.resourceInventoriedAs;\nconst resourceOut = msg.payload.data.createEconomicEvent.economicEvent.toResourceInventoriedAs;\n\n\nmsg.payload = {};\nmsg.payload.eventId = eventId;\nmsg.payload.resourceIn = resourceIn;\nmsg.payload.resourceOut = resourceOut;\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 660,
        "y": 440,
        "wires": [
            [
                "72c05c5c0bd10d12"
            ]
        ]
    },
    {
        "id": "75ad1ae27b0775fb",
        "type": "http request",
        "z": "a9cf961a3a52160c",
        "name": "",
        "method": "use",
        "ret": "obj",
        "paytoqs": "ignore",
        "url": "",
        "tls": "",
        "persist": false,
        "proxy": "",
        "authType": "",
        "senderr": false,
        "x": 410,
        "y": 440,
        "wires": [
            [
                "b582df30a9d2445c",
                "04c370bd35360547"
            ]
        ]
    },
    {
        "id": "62fcaf5db019d842",
        "type": "function",
        "z": "a9cf961a3a52160c",
        "name": "Create Resource",
        "func": "// Reset the headears\nmsg.headers = {};\nmsg.headers['content-type'] = 'application/json';\nmsg.headers['authorization'] = \"Bearer \" + msg.payload.token;\n\n\nmsg.url = msg.payload.endpoint;\nmsg.method = 'POST';\n\nconst agent_id = msg.payload.agent_id;\nconst resource_id = msg.payload.resource_id;\nconst unit_id = msg.payload.unit_id;\nconst amount = msg.payload.amount;\nconst resource_name = msg.payload.resource_name;\n\nconst ts = new Date(Date.now());\n\n// This is going to destroy the msg.payload!!!\nmsg.payload = JSON.stringify({\n  query:    `mutation($event:EconomicEventCreateParams!, $newInventoriedResource:EconomicResourceCreateParams) {\n                createEconomicEvent(event:$event, newInventoriedResource:$newInventoriedResource) {\n                    economicEvent {\n                        id\n                        provider {\n                            id\n                            name\n                            note\n                        }\n                        resourceQuantity {\n                            hasNumericalValue\n                            hasUnit {\n                                label\n                                symbol\n                            }\n                        }\n                        toResourceInventoriedAs { \n                            id\n                            name\n                            onhandQuantity {\n                                hasNumericalValue\n                                hasUnit {\n                                    label\n                                    symbol\n                                }\n                            }\n                            accountingQuantity {\n                                hasNumericalValue\n                                hasUnit {\n                                    label\n                                    symbol\n                                }\n                            }\n                        }\n                        resourceInventoriedAs {\n                            id\n                            name\n                            onhandQuantity {\n                                hasNumericalValue\n                                hasUnit {\n                                    label\n                                    symbol\n                                }\n                            }\n                            accountingQuantity {\n                                hasNumericalValue\n                                hasUnit {\n                                    label\n                                    symbol\n                                }\n                            }\n                        }\n                    }\n                }\n            }`,\n    variables: {\n        \"event\": {\n            \"note\": \"update event\",\n            \"action\": \"raise\",\n            \"provider\": agent_id, \n            \"receiver\": agent_id,\n            \"hasPointInTime\" : ts,\n            \"resourceInventoriedAs\": resource_id,\n            \"resourceQuantity\": {\n              \"hasUnit\": unit_id, \n              \"hasNumericalValue\": amount \n            }\n        },\n        \"newInventoriedResource\": { \n            \"name\": resource_name\n        }\n    }\n})\n\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 230,
        "y": 440,
        "wires": [
            [
                "75ad1ae27b0775fb"
            ]
        ]
    },
    {
        "id": "13197e6bea34f939",
        "type": "http in",
        "z": "a9cf961a3a52160c",
        "name": "Form",
        "url": "/isolationgowns/resource",
        "method": "post",
        "upload": false,
        "swaggerDoc": "",
        "x": 50,
        "y": 440,
        "wires": [
            [
                "62fcaf5db019d842"
            ]
        ]
    },
    {
        "id": "ec61e56c21eb3e9f",
        "type": "function",
        "z": "a9cf961a3a52160c",
        "name": "Format Reply",
        "func": "const processId = msg.payload.data.createProcess.process.id;\n\n\nmsg.payload = {};\nmsg.payload.processId = processId;\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 660,
        "y": 580,
        "wires": [
            [
                "c3e3e6232d39d1b6"
            ]
        ]
    },
    {
        "id": "cf36936a5c75bfd6",
        "type": "http request",
        "z": "a9cf961a3a52160c",
        "name": "",
        "method": "use",
        "ret": "obj",
        "paytoqs": "ignore",
        "url": "",
        "tls": "",
        "persist": false,
        "proxy": "",
        "authType": "",
        "senderr": false,
        "x": 410,
        "y": 580,
        "wires": [
            [
                "6905f51ee38526b3",
                "ec61e56c21eb3e9f"
            ]
        ]
    },
    {
        "id": "c3e3e6232d39d1b6",
        "type": "http response",
        "z": "a9cf961a3a52160c",
        "name": "",
        "statusCode": "",
        "headers": {},
        "x": 890,
        "y": 580,
        "wires": []
    },
    {
        "id": "6905f51ee38526b3",
        "type": "debug",
        "z": "a9cf961a3a52160c",
        "name": "",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 570,
        "y": 640,
        "wires": []
    },
    {
        "id": "b82c72a08c1a9fde",
        "type": "http in",
        "z": "a9cf961a3a52160c",
        "name": "Form",
        "url": "/isolationgowns/process",
        "method": "post",
        "upload": false,
        "swaggerDoc": "",
        "x": 50,
        "y": 580,
        "wires": [
            [
                "e7f96084acdd0aa2"
            ]
        ]
    },
    {
        "id": "71e1a605b5ded04e",
        "type": "http response",
        "z": "a9cf961a3a52160c",
        "name": "",
        "statusCode": "",
        "headers": {},
        "x": 890,
        "y": 720,
        "wires": []
    },
    {
        "id": "ec313c7bf8cd91cf",
        "type": "function",
        "z": "a9cf961a3a52160c",
        "name": "Format Reply",
        "func": "const transferID = msg.payload.data.createEconomicEvent.economicEvent.id;\n\n\nmsg.payload = {};\nmsg.payload.transferID = transferID;\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 660,
        "y": 720,
        "wires": [
            [
                "71e1a605b5ded04e"
            ]
        ]
    },
    {
        "id": "1f51d816c9254a8e",
        "type": "http request",
        "z": "a9cf961a3a52160c",
        "name": "",
        "method": "use",
        "ret": "obj",
        "paytoqs": "ignore",
        "url": "",
        "tls": "",
        "persist": false,
        "proxy": "",
        "authType": "",
        "senderr": false,
        "x": 410,
        "y": 720,
        "wires": [
            [
                "78bbd41a6c118d6b",
                "ec313c7bf8cd91cf"
            ]
        ]
    },
    {
        "id": "78bbd41a6c118d6b",
        "type": "debug",
        "z": "a9cf961a3a52160c",
        "name": "",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 570,
        "y": 780,
        "wires": []
    },
    {
        "id": "26c12da433641d7d",
        "type": "http in",
        "z": "a9cf961a3a52160c",
        "name": "Form",
        "url": "/isolationgowns/transfer",
        "method": "post",
        "upload": false,
        "swaggerDoc": "",
        "x": 50,
        "y": 720,
        "wires": [
            [
                "e6a4ec239be873e1"
            ]
        ]
    },
    {
        "id": "e6a4ec239be873e1",
        "type": "function",
        "z": "a9cf961a3a52160c",
        "name": "Transfer Custody",
        "func": "// Reset the headears\nmsg.headers = {};\nmsg.headers['content-type'] = 'application/json';\nmsg.headers['authorization'] = \"Bearer \" + msg.payload.token;\n\n\nmsg.url = msg.payload.endpoint;\nmsg.method = 'POST';\n\nconst note = msg.payload.note;\nconst provider_id = msg.payload.provider_id;\nconst receiver_id = msg.payload.receiver_id;\nconst resource_id = msg.payload.resource_id;\nconst unit_id = msg.payload.unit_id;\nconst amount = msg.payload.amount;\nconst location_id = msg.payload.location_id;\n\nconst ts = new Date(Date.now());\n\n// This is going to destroy the msg.payload!!!\nmsg.payload = JSON.stringify({\n  query:    `mutation($event:EconomicEventCreateParams!) {\n                createEconomicEvent(event:$event) {\n                    economicEvent {\n                        id\n                        provider {\n                            id\n                            name\n                            note\n                        }\n                        resourceQuantity {\n                            hasNumericalValue\n                            hasUnit {\n                                label\n                                symbol\n                            }\n                        }\n                        toResourceInventoriedAs { \n                            id\n                            name\n                            onhandQuantity {\n                                hasNumericalValue\n                                hasUnit {\n                                    label\n                                    symbol\n                                }\n                            }\n                            accountingQuantity {\n                                hasNumericalValue\n                                hasUnit {\n                                    label\n                                    symbol\n                                }\n                            }\n                            primaryAccountable {\n                            id\n                          }\n                        }\n                        resourceInventoriedAs {\n                            id\n                            name\n                            onhandQuantity {\n                                hasNumericalValue\n                                hasUnit {\n                                    label\n                                    symbol\n                                }\n                            }\n                            accountingQuantity {\n                                hasNumericalValue\n                                hasUnit {\n                                    label\n                                    symbol\n                                }\n                            }\n                            primaryAccountable {\n                            id\n                          }\n                        }\n                    }\n                }\n            }`,\n    variables: {\n        \"event\": {\n            \"note\": note,\n            \"action\": \"transfer-custody\",\n            \"provider\": provider_id, \n            \"receiver\": receiver_id, \n            \"resourceInventoriedAs\": resource_id,\n            \"hasPointInTime\": ts,\n            \"atLocation\": location_id,\n            \"resourceQuantity\": {\n              \"hasUnit\": unit_id, \n              \"hasNumericalValue\": amount \n            }\n        }\n    }\n})\n\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 210,
        "y": 720,
        "wires": [
            [
                "1f51d816c9254a8e",
                "78bbd41a6c118d6b"
            ]
        ]
    },
    {
        "id": "fe5db33a07f08de1",
        "type": "http response",
        "z": "a9cf961a3a52160c",
        "name": "",
        "statusCode": "",
        "headers": {},
        "x": 890,
        "y": 840,
        "wires": []
    },
    {
        "id": "d1f6e59d5ba1e759",
        "type": "function",
        "z": "a9cf961a3a52160c",
        "name": "Format Reply",
        "func": "const eventId = msg.payload.data.createEconomicEvent.economicEvent.id;\n\n\nmsg.payload = {};\nmsg.payload.eventId = eventId;\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 660,
        "y": 840,
        "wires": [
            [
                "fe5db33a07f08de1"
            ]
        ]
    },
    {
        "id": "9395b1d5f101d921",
        "type": "http request",
        "z": "a9cf961a3a52160c",
        "name": "",
        "method": "use",
        "ret": "obj",
        "paytoqs": "ignore",
        "url": "",
        "tls": "",
        "persist": false,
        "proxy": "",
        "authType": "",
        "senderr": false,
        "x": 410,
        "y": 840,
        "wires": [
            [
                "2fdd738ccee21e9c",
                "d1f6e59d5ba1e759"
            ]
        ]
    },
    {
        "id": "1239e8ccc0e65584",
        "type": "function",
        "z": "a9cf961a3a52160c",
        "name": "Create Event",
        "func": "// Reset the headears\nmsg.headers = {};\nmsg.headers['content-type'] = 'application/json';\nmsg.headers['authorization'] = \"Bearer \" + msg.payload.token;\n\n\nmsg.url = msg.payload.endpoint;\nmsg.method = 'POST';\n\nvar variables = {\n        \"event\": {\n            \"note\": msg.payload.note,\n            \"action\": msg.payload.action\n        }\n};\n\nif ( msg.payload.provider_id != undefined ){\n    variables.event.provider = msg.payload.provider_id;\n}\n\nif ( msg.payload.receiver_id != undefined ){\n    variables.event.receiver = msg.payload.receiver_id;\n}\n\nif ( msg.payload.processIn_id != undefined ){\n    variables.event.inputOf = msg.payload.processIn_id;\n}\n\nif ( msg.payload.processOut_id != undefined ){\n    variables.event.outputOf = msg.payload.processOut_id;\n}\n\nif ( msg.payload.unit_id != undefined && msg.payload.amount != undefined){\n    variables.event.resourceQuantity = {};\n    variables.event.resourceQuantity.hasUnit = msg.payload.unit_id;\n    variables.event.resourceQuantity.hasNumericalValue = msg.payload.amount;\n}\n\nif ( msg.payload.resource_id != undefined ){\n    variables.event.resourceInventoriedAs = msg.payload.resource_id;\n}\n\nvariables.event.hasPointInTime = new Date(Date.now());\n\n// This is going to destroy the msg.payload!!!\nmsg.payload = JSON.stringify({\n  query:    `mutation($event:EconomicEventCreateParams!) {\n                createEconomicEvent(event:$event) {\n                    economicEvent {\n                        id\n                        provider {\n                            id\n                            name\n                            note\n                        }\n                        resourceQuantity {\n                            hasNumericalValue\n                            hasUnit {\n                                label\n                                symbol\n                            }\n                        }\n                        toResourceInventoriedAs { \n                            id\n                            name\n                            onhandQuantity {\n                                hasNumericalValue\n                                hasUnit {\n                                    label\n                                    symbol\n                                }\n                            }\n                            accountingQuantity {\n                                hasNumericalValue\n                                hasUnit {\n                                    label\n                                    symbol\n                                }\n                            }\n                            primaryAccountable {\n                            id\n                          }\n                        }\n                        resourceInventoriedAs {\n                            id\n                            name\n                            onhandQuantity {\n                                hasNumericalValue\n                                hasUnit {\n                                    label\n                                    symbol\n                                }\n                            }\n                            accountingQuantity {\n                                hasNumericalValue\n                                hasUnit {\n                                    label\n                                    symbol\n                                }\n                            }\n                            primaryAccountable {\n                            id\n                          }\n                        }\n                    }\n                }\n            }`,\n    variables: variables\n})\n\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 190,
        "y": 840,
        "wires": [
            [
                "9395b1d5f101d921"
            ]
        ]
    },
    {
        "id": "2fdd738ccee21e9c",
        "type": "debug",
        "z": "a9cf961a3a52160c",
        "name": "",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 570,
        "y": 900,
        "wires": []
    },
    {
        "id": "1b77e1551252bd55",
        "type": "http in",
        "z": "a9cf961a3a52160c",
        "name": "Form",
        "url": "/isolationgowns/event",
        "method": "post",
        "upload": false,
        "swaggerDoc": "",
        "x": 50,
        "y": 840,
        "wires": [
            [
                "1239e8ccc0e65584"
            ]
        ]
    },
    {
        "id": "17b272e3686339f5",
        "type": "http response",
        "z": "a9cf961a3a52160c",
        "name": "",
        "statusCode": "",
        "headers": {},
        "x": 890,
        "y": 1000,
        "wires": []
    },
    {
        "id": "30c22066ef8321d8",
        "type": "function",
        "z": "a9cf961a3a52160c",
        "name": "Format Reply",
        "func": "const trace = msg.payload.data.economicResource.trace\nconst track = msg.payload.data.economicResource.track\n\n\nmsg.payload = {};\nmsg.payload.trace = trace;\nmsg.payload.track = track;\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 660,
        "y": 1000,
        "wires": [
            [
                "17b272e3686339f5"
            ]
        ]
    },
    {
        "id": "9b5733fa43a0796d",
        "type": "http request",
        "z": "a9cf961a3a52160c",
        "name": "",
        "method": "use",
        "ret": "obj",
        "paytoqs": "ignore",
        "url": "",
        "tls": "",
        "persist": false,
        "proxy": "",
        "authType": "",
        "senderr": false,
        "x": 410,
        "y": 1000,
        "wires": [
            [
                "04a7b53f4308dcdd",
                "30c22066ef8321d8"
            ]
        ]
    },
    {
        "id": "2db04210e5b35643",
        "type": "function",
        "z": "a9cf961a3a52160c",
        "name": "Trace & Track",
        "func": "// Reset the headears\nmsg.headers = {};\nmsg.headers['content-type'] = 'application/json';\nmsg.headers['authorization'] = \"Bearer \" + msg.payload.token;\n\n\nmsg.url = msg.payload.endpoint;\nmsg.method = 'POST';\n\nvar variables = {\n    \"id\": msg.payload.resource_id,\n    \"recurseLimit\": msg.payload.recursion,\n\n};\n\n// This is going to destroy the msg.payload!!!\nmsg.payload = JSON.stringify({\n  query:    `query($id:ID!, $recurseLimit:Int!) {\n                economicResource(id: $id) {\n                    trace(recurseLimit: $recurseLimit) {...trace}\n                    track(recurseLimit: $recurseLimit) {...track}\n                }\n\n            }\n\n            fragment unit on Unit {\n                id symbol label\n            }\n\n            fragment measure on Measure {\n                hasUnit {...unit}\n                hasNumericalValue\n            }\n\n            fragment spatialThing on SpatialThing {\n                id\n                name\n                mappableAddress\n                note\n                geom\n                lat alt long\n            }\n\n            fragment economicResource on EconomicResource {\n                id\n                resourceName: name\n                note\n                primaryAccountable {id name displayUsername}\n                onhandQuantity {...measure}\n                accountingQuantity {...measure}\n                currentLocation {...spatialThing}\n                trackingIdentifier\n            }\n\n            fragment economicEvent on EconomicEvent {\n                id\n                action {id}\n                provider {id name displayUsername}\n                receiver {id name displayUsername}\n                resourceQuantity {...measure}\n                resourceClassifiedAs\n                resourceInventoriedAs {...economicResource}\n                note\n            }\n\n            fragment process on Process {\n                id\n                processName: name\n                note\n                inputs {...economicEvent}\n                outputs {...economicEvent}\n            }\n\n            fragment track on ProductionFlowItem {\n                ... on EconomicResource {__typename ...economicResource}\n                ... on EconomicEvent {__typename ...economicEvent}\n                ... on Process {__typename ...process}\n            }\n\n            fragment trace on ProductionFlowItem {\n                ... on EconomicResource {__typename ...economicResource}\n                ... on EconomicEvent {__typename ...economicEvent}\n                ... on Process {__typename ...process}\n}`,\n    variables: variables\n})\n\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 200,
        "y": 1000,
        "wires": [
            [
                "9b5733fa43a0796d"
            ]
        ]
    },
    {
        "id": "04a7b53f4308dcdd",
        "type": "debug",
        "z": "a9cf961a3a52160c",
        "name": "",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 570,
        "y": 1060,
        "wires": []
    },
    {
        "id": "dc031adaa1b0f61b",
        "type": "http in",
        "z": "a9cf961a3a52160c",
        "name": "Form",
        "url": "/isolationgowns/tracetrack",
        "method": "post",
        "upload": false,
        "swaggerDoc": "",
        "x": 50,
        "y": 1000,
        "wires": [
            [
                "2db04210e5b35643"
            ]
        ]
    }
]