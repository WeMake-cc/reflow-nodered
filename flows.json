[
    {
        "id": "727cabf56f83b992",
        "type": "tab",
        "label": "Graphql Reflow",
        "disabled": false,
        "info": "",
        "env": []
    },
    {
        "id": "c107fab43a12cc56",
        "type": "tab",
        "label": "Login & password",
        "disabled": false,
        "info": "",
        "env": []
    },
    {
        "id": "97fe2bfd9d427697",
        "type": "tab",
        "label": "description",
        "disabled": false,
        "info": "",
        "env": []
    },
    {
        "id": "7a9a689b1b991e15",
        "type": "tab",
        "label": "Flow 1",
        "disabled": false,
        "info": "",
        "env": []
    },
    {
        "id": "a9cf961a3a52160c",
        "type": "tab",
        "label": "Isolation Gowns",
        "disabled": false,
        "info": "",
        "env": []
    },
    {
        "id": "c9cff8dccd3e7c63",
        "type": "subflow",
        "name": "Subflow 1",
        "info": "",
        "category": "",
        "in": [
            {
                "x": 160,
                "y": 100,
                "wires": []
            }
        ],
        "out": [
            {
                "x": 280,
                "y": 100,
                "wires": []
            },
            {
                "x": 280,
                "y": 40,
                "wires": []
            }
        ],
        "env": [
            {
                "name": "ciao",
                "type": "str",
                "value": "www"
            }
        ],
        "meta": {},
        "color": "#DDAA99"
    },
    {
        "id": "6dbb08529c2feac4",
        "type": "subflow",
        "name": "createResourceSpecification",
        "info": "",
        "category": "",
        "in": [
            {
                "x": 240,
                "y": 260,
                "wires": [
                    {
                        "id": "8ba8672253c19bee"
                    }
                ]
            }
        ],
        "out": [
            {
                "x": 1000,
                "y": 280,
                "wires": [
                    {
                        "id": "8ba8672253c19bee",
                        "port": 0
                    }
                ]
            }
        ],
        "env": [
            {
                "name": "msg.paylod",
                "type": "str",
                "value": "ciaone"
            }
        ],
        "meta": {},
        "color": "#DDAA99"
    },
    {
        "id": "a5c1f7e89e3b03fd",
        "type": "subflow",
        "name": "createEconomicEvent",
        "info": "",
        "category": "",
        "in": [
            {
                "x": 260,
                "y": 100,
                "wires": [
                    {
                        "id": "56e154a4b3ebc140"
                    }
                ]
            }
        ],
        "out": [
            {
                "x": 720,
                "y": 100,
                "wires": [
                    {
                        "id": "56e154a4b3ebc140",
                        "port": 0
                    }
                ]
            }
        ],
        "env": [],
        "meta": {},
        "color": "#DDAA99"
    },
    {
        "id": "e0d0143ee4f650a7",
        "type": "graphql-server",
        "name": "Dyne Instance",
        "endpoint": "http://135.181.35.156:4000/api/explore"
    },
    {
        "id": "1bf8ea68f62a96fd",
        "type": "ui_group",
        "name": "reflow",
        "tab": "cf663179164c69d1",
        "order": 1,
        "disp": false,
        "width": "10",
        "collapse": false,
        "className": ""
    },
    {
        "id": "cf663179164c69d1",
        "type": "ui_tab",
        "name": "one",
        "icon": "dashboard",
        "disabled": false,
        "hidden": false
    },
    {
        "id": "a1f23e7f9e7ee37e",
        "type": "ui_base",
        "theme": {
            "name": "theme-light",
            "lightTheme": {
                "default": "#0094CE",
                "baseColor": "#0094CE",
                "baseFont": "-apple-system,BlinkMacSystemFont,Segoe UI,Roboto,Oxygen-Sans,Ubuntu,Cantarell,Helvetica Neue,sans-serif",
                "edited": true,
                "reset": false
            },
            "darkTheme": {
                "default": "#097479",
                "baseColor": "#097479",
                "baseFont": "-apple-system,BlinkMacSystemFont,Segoe UI,Roboto,Oxygen-Sans,Ubuntu,Cantarell,Helvetica Neue,sans-serif",
                "edited": false
            },
            "customTheme": {
                "name": "Untitled Theme 1",
                "default": "#4B7930",
                "baseColor": "#4B7930",
                "baseFont": "-apple-system,BlinkMacSystemFont,Segoe UI,Roboto,Oxygen-Sans,Ubuntu,Cantarell,Helvetica Neue,sans-serif"
            },
            "themeState": {
                "base-color": {
                    "default": "#0094CE",
                    "value": "#0094CE",
                    "edited": false
                },
                "page-titlebar-backgroundColor": {
                    "value": "#0094CE",
                    "edited": false
                },
                "page-backgroundColor": {
                    "value": "#fafafa",
                    "edited": false
                },
                "page-sidebar-backgroundColor": {
                    "value": "#ffffff",
                    "edited": false
                },
                "group-textColor": {
                    "value": "#1bbfff",
                    "edited": false
                },
                "group-borderColor": {
                    "value": "#ffffff",
                    "edited": false
                },
                "group-backgroundColor": {
                    "value": "#ffffff",
                    "edited": false
                },
                "widget-textColor": {
                    "value": "#111111",
                    "edited": false
                },
                "widget-backgroundColor": {
                    "value": "#0094ce",
                    "edited": false
                },
                "widget-borderColor": {
                    "value": "#ffffff",
                    "edited": false
                },
                "base-font": {
                    "value": "-apple-system,BlinkMacSystemFont,Segoe UI,Roboto,Oxygen-Sans,Ubuntu,Cantarell,Helvetica Neue,sans-serif"
                }
            },
            "angularTheme": {
                "primary": "indigo",
                "accents": "blue",
                "warn": "red",
                "background": "grey",
                "palette": "light"
            }
        },
        "site": {
            "name": "Node-RED Dashboard",
            "hideToolbar": "false",
            "allowSwipe": "false",
            "lockMenu": "false",
            "allowTempTheme": "true",
            "dateFormat": "DD/MM/YYYY",
            "sizes": {
                "sx": 48,
                "sy": 48,
                "gx": 6,
                "gy": 6,
                "cx": 6,
                "cy": 6,
                "px": 0,
                "py": 0
            }
        }
    },
    {
        "id": "a9c7afec098fb039",
        "type": "ui_tab",
        "name": "two",
        "icon": "dashboard",
        "disabled": false,
        "hidden": false
    },
    {
        "id": "8ba8672253c19bee",
        "type": "graphql",
        "z": "6dbb08529c2feac4",
        "name": "mutation createResourceSpecification resourceClassifiedAs: \"pane\"",
        "graphql": "e0d0143ee4f650a7",
        "format": "handlebars",
        "syntax": "mustache",
        "template": "mutation {\n  createResourceSpecification(\n    resourceSpecification: {\n      name: \"{{payload}}\"\n      resourceClassifiedAs: \"pane\"\n      note: \"nota pane\"\n    }\n  ) {\n    resourceSpecification {\n      id\n      name\n    }\n  }\n}\n",
        "showDebug": true,
        "x": 610,
        "y": 320,
        "wires": [
            [],
            []
        ]
    },
    {
        "id": "5e3e9edf345cb08e",
        "type": "inject",
        "z": "6dbb08529c2feac4",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "authorization",
                "v": "bearer",
                "vt": "global"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "panino24",
        "payloadType": "str",
        "x": 180,
        "y": 360,
        "wires": [
            [
                "8ba8672253c19bee"
            ]
        ]
    },
    {
        "id": "56e154a4b3ebc140",
        "type": "graphql",
        "z": "a5c1f7e89e3b03fd",
        "name": "createEconomicEvent",
        "graphql": "e0d0143ee4f650a7",
        "format": "handlebars",
        "syntax": "mustache",
        "template": "mutation {createEconomicEvent(\n      event: {\n        action: \"produce\",\n        provider: \"{{provider}}\",\n        receiver: \"{{receiver}}\",\n        resourceQuantity: null,\n      },\n      newInventoriedResource: {\n        name: \"{{payload}}\",\n        note: \"notes\",\n        tags: \"tag\"\n      }\n      ) {\n        economicEvent {\n          id\n          note\n          resourceInventoriedAs {\n            id\n            name\n            onhandQuantity {\n              hasNumericalValue\n              hasUnit {\n                label\n                symbol\n              }\n            }\n            accountingQuantity {\n              hasNumericalValue\n              hasUnit {\n                label\n                symbol\n              }\n            }\n          }\n        }\n      }\n    }",
        "showDebug": true,
        "x": 480,
        "y": 160,
        "wires": [
            [],
            []
        ]
    },
    {
        "id": "d892aade0e00688f",
        "type": "inject",
        "z": "a5c1f7e89e3b03fd",
        "name": "payload provider receiver",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "authorization",
                "v": "bearer",
                "vt": "global"
            },
            {
                "p": "provider",
                "v": "01FNBRZ027Z3ZRCTT4T9VBP614",
                "vt": "str"
            },
            {
                "p": "receiver",
                "v": "01FNBRZ027Z3ZRCTT4T9VBP614",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "panino03",
        "payloadType": "str",
        "x": 170,
        "y": 240,
        "wires": [
            [
                "56e154a4b3ebc140"
            ]
        ]
    },
    {
        "id": "2904ace6e2db2de0",
        "type": "debug",
        "z": "727cabf56f83b992",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 930,
        "y": 680,
        "wires": []
    },
    {
        "id": "e35842588beca687",
        "type": "graphql",
        "z": "727cabf56f83b992",
        "name": "query  resourceSpecification by id",
        "graphql": "e0d0143ee4f650a7",
        "format": "handlebars",
        "syntax": "mustache",
        "template": "query MyQuery {\n  resourceSpecification(id: \"{{payload}}\") {\n    note\n    name\n    id\n    resourceClassifiedAs\n  }\n}",
        "showDebug": false,
        "x": 600,
        "y": 120,
        "wires": [
            [
                "cc2b490738580147"
            ],
            []
        ]
    },
    {
        "id": "2657e417f7a280b4",
        "type": "inject",
        "z": "727cabf56f83b992",
        "name": "01FHZ173XKBT6MEJ8AHEMEW2WJ",
        "props": [
            {
                "p": "payload"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "01FNPMN6Z55W7P088THDXJY78A",
        "payloadType": "str",
        "x": 190,
        "y": 120,
        "wires": [
            [
                "e35842588beca687"
            ]
        ]
    },
    {
        "id": "cc2b490738580147",
        "type": "debug",
        "z": "727cabf56f83b992",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 910,
        "y": 120,
        "wires": []
    },
    {
        "id": "c5234d58e71c5939",
        "type": "graphql",
        "z": "727cabf56f83b992",
        "name": "mutation createResourceSpecification resourceClassifiedAs: \"pane\"",
        "graphql": "e0d0143ee4f650a7",
        "format": "handlebars",
        "syntax": "mustache",
        "template": "mutation {\n  createResourceSpecification(\n    resourceSpecification: {\n      name: \"{{payload}}\"\n      resourceClassifiedAs: \"pane\"\n      note: \"nota pane\"\n    }\n  ) {\n    resourceSpecification {\n      id\n      name\n    }\n  }\n}\n",
        "showDebug": true,
        "x": 510,
        "y": 180,
        "wires": [
            [
                "cc2b490738580147"
            ],
            []
        ]
    },
    {
        "id": "bc7ffb3b5356e167",
        "type": "inject",
        "z": "727cabf56f83b992",
        "name": "ResourceSpecification",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "authorization",
                "v": "bearer",
                "vt": "global"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "panino59",
        "payloadType": "str",
        "x": 140,
        "y": 180,
        "wires": [
            [
                "c5234d58e71c5939"
            ]
        ]
    },
    {
        "id": "1a50cc1518b94141",
        "type": "inject",
        "z": "727cabf56f83b992",
        "name": "categories",
        "props": [
            {
                "p": "authorization",
                "v": "bearer",
                "vt": "flow"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "x": 380,
        "y": 680,
        "wires": [
            [
                "56909346ae0b2936"
            ]
        ]
    },
    {
        "id": "56909346ae0b2936",
        "type": "graphql",
        "z": "727cabf56f83b992",
        "name": "categories",
        "graphql": "e0d0143ee4f650a7",
        "format": "text",
        "syntax": "mustache",
        "template": "query MyQuery {\n  categories {\n    pageInfo {\n      hasNextPage\n      hasPreviousPage\n    }\n    totalCount\n  }\n}\n",
        "showDebug": false,
        "x": 590,
        "y": 680,
        "wires": [
            [
                "2904ace6e2db2de0"
            ],
            []
        ]
    },
    {
        "id": "6ce7457c953c42fa",
        "type": "inject",
        "z": "727cabf56f83b992",
        "name": "resourceSpecifications",
        "props": [
            {
                "p": "authorization",
                "v": "bearer",
                "vt": "global"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payloadType": "str",
        "x": 140,
        "y": 60,
        "wires": [
            [
                "7ed308d826d7a710"
            ]
        ]
    },
    {
        "id": "7b1ec27c82af6140",
        "type": "graphql",
        "z": "727cabf56f83b992",
        "name": "query Agents",
        "graphql": "e0d0143ee4f650a7",
        "format": "text",
        "syntax": "mustache",
        "template": "query agents {\n  agents(limit: 20) {\n    canonicalUrl\n    displayUsername\n    id\n    image\n    agentType\n    name\n    note\n\n  }\n}\n \n",
        "showDebug": false,
        "x": 590,
        "y": 780,
        "wires": [
            [
                "bdb14b78eab721c4"
            ],
            []
        ]
    },
    {
        "id": "b56a5d4324b5c24a",
        "type": "inject",
        "z": "727cabf56f83b992",
        "name": "agents",
        "props": [
            {
                "p": "authorization",
                "v": "bearer",
                "vt": "global"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payloadType": "str",
        "x": 390,
        "y": 780,
        "wires": [
            [
                "7b1ec27c82af6140"
            ]
        ]
    },
    {
        "id": "bdb14b78eab721c4",
        "type": "debug",
        "z": "727cabf56f83b992",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 930,
        "y": 780,
        "wires": []
    },
    {
        "id": "46591adb4083608e",
        "type": "graphql",
        "z": "727cabf56f83b992",
        "name": "query economicResources",
        "graphql": "e0d0143ee4f650a7",
        "format": "text",
        "syntax": "mustache",
        "template": "query economicResources {\n  economicResources {\n    id\n    image\n    name\n    note\n  }\n}",
        "showDebug": false,
        "x": 580,
        "y": 380,
        "wires": [
            [
                "49f91532562d5229",
                "33cd2bd05dd3e0ad"
            ],
            []
        ]
    },
    {
        "id": "afc235fb9d3b02ce",
        "type": "inject",
        "z": "727cabf56f83b992",
        "name": "economicResources",
        "props": [
            {
                "p": "authorization",
                "v": "bearer",
                "vt": "global"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payloadType": "str",
        "x": 290,
        "y": 380,
        "wires": [
            [
                "46591adb4083608e"
            ]
        ]
    },
    {
        "id": "33cd2bd05dd3e0ad",
        "type": "debug",
        "z": "727cabf56f83b992",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload.economicResources",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 1000,
        "y": 400,
        "wires": []
    },
    {
        "id": "ca65bf2a50ca7a23",
        "type": "debug",
        "z": "727cabf56f83b992",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 910,
        "y": 520,
        "wires": []
    },
    {
        "id": "9578835e9f6dab95",
        "type": "subflow:a5c1f7e89e3b03fd",
        "z": "727cabf56f83b992",
        "name": "",
        "env": [],
        "x": 600,
        "y": 520,
        "wires": [
            [
                "ca65bf2a50ca7a23"
            ]
        ]
    },
    {
        "id": "e9a56fc9220192dd",
        "type": "inject",
        "z": "727cabf56f83b992",
        "name": "payload provider receiver",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "authorization",
                "v": "bearer",
                "vt": "global"
            },
            {
                "p": "provider",
                "v": "01FNBRZ027Z3ZRCTT4T9VBP614",
                "vt": "str"
            },
            {
                "p": "receiver",
                "v": "01FNBRZ027Z3ZRCTT4T9VBP614",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "panino08",
        "payloadType": "str",
        "x": 310,
        "y": 520,
        "wires": [
            [
                "9578835e9f6dab95"
            ]
        ]
    },
    {
        "id": "79e2650e49931153",
        "type": "inject",
        "z": "727cabf56f83b992",
        "name": "payload provider receiver",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "authorization",
                "v": "bearer",
                "vt": "global"
            },
            {
                "p": "provider",
                "v": "01FNBRZ027Z3ZRCTT4T9VBP614",
                "vt": "str"
            },
            {
                "p": "receiver",
                "v": "01FNBRZ027Z3ZRCTT4T9VBP614",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "panino07",
        "payloadType": "str",
        "x": 310,
        "y": 460,
        "wires": [
            [
                "63136a43b4a8c4c6"
            ]
        ]
    },
    {
        "id": "63136a43b4a8c4c6",
        "type": "graphql",
        "z": "727cabf56f83b992",
        "name": "createEconomicEvent",
        "graphql": "e0d0143ee4f650a7",
        "format": "handlebars",
        "syntax": "mustache",
        "template": "mutation {createEconomicEvent(\n      event: {\n        action: \"produce\",\n        provider: \"{{provider}}\",\n        receiver: \"{{receiver}}\",\n        resourceQuantity: null,\n      },\n      newInventoriedResource: {\n        name: \"{{payload}}\",\n        note: \"notes\",\n        tags: \"tag\"\n      }\n      ) {\n        economicEvent {\n          id\n          note\n          resourceInventoriedAs {\n            id\n            name\n            onhandQuantity {\n              hasNumericalValue\n              hasUnit {\n                label\n                symbol\n              }\n            }\n            accountingQuantity {\n              hasNumericalValue\n              hasUnit {\n                label\n                symbol\n              }\n            }\n          }\n        }\n      }\n    }",
        "showDebug": true,
        "x": 600,
        "y": 460,
        "wires": [
            [
                "70ebd13f42a515d9"
            ],
            []
        ]
    },
    {
        "id": "70ebd13f42a515d9",
        "type": "debug",
        "z": "727cabf56f83b992",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 910,
        "y": 460,
        "wires": []
    },
    {
        "id": "b48934f7c8cbcc0a",
        "type": "subflow:6dbb08529c2feac4",
        "z": "727cabf56f83b992",
        "name": "",
        "x": 620,
        "y": 240,
        "wires": [
            [
                "cc2b490738580147"
            ]
        ]
    },
    {
        "id": "3b8f0170bbd67053",
        "type": "inject",
        "z": "727cabf56f83b992",
        "name": "mutation: panino58",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "authorization",
                "v": "bearer",
                "vt": "global"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "panino58",
        "payloadType": "str",
        "x": 130,
        "y": 240,
        "wires": [
            [
                "b48934f7c8cbcc0a"
            ]
        ]
    },
    {
        "id": "7ed308d826d7a710",
        "type": "graphql",
        "z": "727cabf56f83b992",
        "name": " resourceSpecifications",
        "graphql": "e0d0143ee4f650a7",
        "format": "text",
        "syntax": "mustache",
        "template": "query MyQuery {\n  resourceSpecifications {\n    name,\n    id\n  }\n}",
        "showDebug": false,
        "x": 640,
        "y": 60,
        "wires": [
            [
                "cc2b490738580147"
            ],
            []
        ]
    },
    {
        "id": "c67756d0bdcd1a7e",
        "type": "debug",
        "z": "727cabf56f83b992",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload.createResourceSpecification.resourceSpecification.id",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 1100,
        "y": 220,
        "wires": []
    },
    {
        "id": "89a65bd88d6262ac",
        "type": "debug",
        "z": "727cabf56f83b992",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload.createResourceSpecification.resourceSpecification.name",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 1110,
        "y": 180,
        "wires": []
    },
    {
        "id": "49f91532562d5229",
        "type": "debug",
        "z": "727cabf56f83b992",
        "name": "",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 910,
        "y": 340,
        "wires": []
    },
    {
        "id": "48514af58ed4f1f7",
        "type": "graphql",
        "z": "727cabf56f83b992",
        "name": "query myAgent",
        "graphql": "e0d0143ee4f650a7",
        "format": "text",
        "syntax": "mustache",
        "template": "query myAgent {\n  myAgent {\n    agentType\n    canonicalUrl\n    inventoriedEconomicResources {\n      name\n    }\n  }\n}",
        "showDebug": false,
        "x": 600,
        "y": 880,
        "wires": [
            [
                "53227ec302f87a6d"
            ],
            []
        ]
    },
    {
        "id": "6c352197212cdfcd",
        "type": "inject",
        "z": "727cabf56f83b992",
        "name": "agents",
        "props": [
            {
                "p": "authorization",
                "v": "bearer",
                "vt": "global"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payloadType": "str",
        "x": 370,
        "y": 880,
        "wires": [
            [
                "48514af58ed4f1f7"
            ]
        ]
    },
    {
        "id": "53227ec302f87a6d",
        "type": "debug",
        "z": "727cabf56f83b992",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 910,
        "y": 880,
        "wires": []
    },
    {
        "id": "935b3e0a5cf84e10",
        "type": "inject",
        "z": "c107fab43a12cc56",
        "name": "Set bearer in flow / execute login",
        "props": [
            {
                "p": "time",
                "v": "",
                "vt": "date"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payloadType": "str",
        "x": 190,
        "y": 100,
        "wires": [
            [
                "9cdf5bce7aa97dbd"
            ]
        ]
    },
    {
        "id": "9cdf5bce7aa97dbd",
        "type": "change",
        "z": "c107fab43a12cc56",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "passwd",
                "pt": "msg",
                "to": "passwd",
                "tot": "global"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 440,
        "y": 100,
        "wires": [
            [
                "666de9b2a745c73e"
            ]
        ]
    },
    {
        "id": "ace41e1f09e93531",
        "type": "inject",
        "z": "c107fab43a12cc56",
        "name": "Set password",
        "props": [
            {
                "p": "passwd",
                "v": "password",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payloadType": "str",
        "x": 130,
        "y": 40,
        "wires": [
            [
                "44b7f62a0c017353"
            ]
        ]
    },
    {
        "id": "44b7f62a0c017353",
        "type": "change",
        "z": "c107fab43a12cc56",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "passwd",
                "pt": "global",
                "to": "passwd",
                "tot": "msg"
            },
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "passwd",
                "tot": "global"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 480,
        "y": 40,
        "wires": [
            [
                "a8a04515c2c69ffb"
            ]
        ]
    },
    {
        "id": "a8a04515c2c69ffb",
        "type": "debug",
        "z": "c107fab43a12cc56",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 750,
        "y": 40,
        "wires": []
    },
    {
        "id": "5d24de78469bdbbf",
        "type": "debug",
        "z": "c107fab43a12cc56",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 1170,
        "y": 100,
        "wires": []
    },
    {
        "id": "bce6e0290e97db78",
        "type": "template",
        "z": "c107fab43a12cc56",
        "name": "Bearer",
        "field": "payload",
        "fieldType": "msg",
        "format": "handlebars",
        "syntax": "mustache",
        "template": "Bearer {{payload.login.token}}",
        "output": "str",
        "x": 1010,
        "y": 100,
        "wires": [
            [
                "5d24de78469bdbbf",
                "76bb49a29c827b4b"
            ]
        ]
    },
    {
        "id": "76bb49a29c827b4b",
        "type": "change",
        "z": "c107fab43a12cc56",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "bearer",
                "pt": "global",
                "to": "payload",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1210,
        "y": 140,
        "wires": [
            []
        ]
    },
    {
        "id": "bf5b869046bee7a5",
        "type": "inject",
        "z": "c107fab43a12cc56",
        "name": "password",
        "props": [
            {
                "p": "payload"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "passwd",
        "payloadType": "global",
        "x": 120,
        "y": 160,
        "wires": [
            [
                "23ececa3b315d1f5"
            ]
        ]
    },
    {
        "id": "23ececa3b315d1f5",
        "type": "debug",
        "z": "c107fab43a12cc56",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 270,
        "y": 160,
        "wires": []
    },
    {
        "id": "666de9b2a745c73e",
        "type": "graphql",
        "z": "c107fab43a12cc56",
        "name": "http://135.181.35.156:4000/api/explore",
        "graphql": "e0d0143ee4f650a7",
        "format": "handlebars",
        "syntax": "mustache",
        "template": "mutation {\n   \n  login(emailOrUsername: \"kostasprint@gmail.com\", password: \"{{passwd}}\") {\n      token # Use the token to activate a session with the server\n    }\n}",
        "showDebug": true,
        "x": 720,
        "y": 100,
        "wires": [
            [
                "bce6e0290e97db78"
            ],
            []
        ]
    },
    {
        "id": "85af6596f52df097",
        "type": "inject",
        "z": "c107fab43a12cc56",
        "name": "bearer",
        "props": [
            {
                "p": "payload"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "bearer",
        "payloadType": "global",
        "x": 110,
        "y": 220,
        "wires": [
            [
                "eff4c831b1fb5578"
            ]
        ]
    },
    {
        "id": "eff4c831b1fb5578",
        "type": "debug",
        "z": "c107fab43a12cc56",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 270,
        "y": 220,
        "wires": []
    },
    {
        "id": "59fcc23356d23664",
        "type": "subflow:c9cff8dccd3e7c63",
        "z": "97fe2bfd9d427697",
        "name": "create need",
        "env": [],
        "x": 130,
        "y": 360,
        "wires": [
            [],
            []
        ]
    },
    {
        "id": "cc2ca38f29de0335",
        "type": "subflow:c9cff8dccd3e7c63",
        "z": "97fe2bfd9d427697",
        "name": "commitment",
        "env": [],
        "x": 330,
        "y": 360,
        "wires": [
            [],
            []
        ]
    },
    {
        "id": "fa48050405817f11",
        "type": "subflow:c9cff8dccd3e7c63",
        "z": "97fe2bfd9d427697",
        "name": "transfer",
        "env": [],
        "x": 780,
        "y": 360,
        "wires": [
            [],
            []
        ],
        "info": "mutation {\n  createEconomicEvent(\n    event: {\n      action: \"transfer\"\n      provider: \"01F7XMMHQ81HQ6DA10XFN24B2E\"\n      receiver: \"01F3MHQ0KWJC7M19B1E8BXVY46\"\n      resourceInventoriedAs: \"01FFMT6P66YDV0Y95XZ6P6JATR\"\n      resourceQuantity: {\n        hasUnit: \"01FFJEBJ4S4E4ZDWZNEWYFZYD7\"\n        hasNumericalValue: 1\n      }\n    }\n\n    newInventoriedResource: { name: \"Apples\" }\n  ) {\n    economicEvent {\n      id\n\n      note\n\n      resourceInventoriedAs {\n        id\n\n        name\n\n        onhandQuantity {\n          hasNumericalValue\n\n          hasUnit {\n            label\n\n            symbol\n          }\n        }\n\n        accountingQuantity {\n          hasNumericalValue\n\n          hasUnit {\n            label\n\n            symbol\n          }\n        }\n      }\n    }\n  }\n}\n"
    },
    {
        "id": "197dd2379024c2b2",
        "type": "subflow:c9cff8dccd3e7c63",
        "z": "97fe2bfd9d427697",
        "name": "pickup",
        "env": [],
        "x": 990,
        "y": 360,
        "wires": [
            [],
            []
        ]
    },
    {
        "id": "6a6222892900f5de",
        "type": "subflow:c9cff8dccd3e7c63",
        "z": "97fe2bfd9d427697",
        "name": "dropoff",
        "env": [],
        "x": 1180,
        "y": 360,
        "wires": [
            [],
            []
        ]
    },
    {
        "id": "98fff48f113dc4b9",
        "type": "subflow:c9cff8dccd3e7c63",
        "z": "97fe2bfd9d427697",
        "name": "weight",
        "env": [],
        "x": 1350,
        "y": 360,
        "wires": [
            [],
            []
        ]
    },
    {
        "id": "850bd9e0508fb832",
        "type": "subflow:c9cff8dccd3e7c63",
        "z": "97fe2bfd9d427697",
        "name": "work sort",
        "env": [],
        "x": 1520,
        "y": 360,
        "wires": [
            [],
            []
        ]
    },
    {
        "id": "d986fa60fe5fb7a0",
        "type": "subflow:c9cff8dccd3e7c63",
        "z": "97fe2bfd9d427697",
        "name": "discard",
        "env": [],
        "x": 1520,
        "y": 420,
        "wires": [
            [],
            []
        ]
    },
    {
        "id": "8a7bed3b199a3ae2",
        "type": "subflow:c9cff8dccd3e7c63",
        "z": "97fe2bfd9d427697",
        "name": "work grind",
        "env": [],
        "x": 1890,
        "y": 360,
        "wires": [
            [],
            []
        ]
    },
    {
        "id": "61d92c306bdd72b0",
        "type": "subflow:c9cff8dccd3e7c63",
        "z": "97fe2bfd9d427697",
        "name": "consume",
        "env": [
            {
                "name": "ciao",
                "value": "",
                "type": "str"
            }
        ],
        "x": 1700,
        "y": 360,
        "wires": [
            [],
            []
        ]
    },
    {
        "id": "853336f3dd7dfa35",
        "type": "comment",
        "z": "97fe2bfd9d427697",
        "name": "bakery ",
        "info": "",
        "x": 310,
        "y": 300,
        "wires": []
    },
    {
        "id": "19c4d812d94c5326",
        "type": "comment",
        "z": "97fe2bfd9d427697",
        "name": "ibrida",
        "info": "",
        "x": 110,
        "y": 300,
        "wires": []
    },
    {
        "id": "8dc6632d51e60240",
        "type": "subflow:c9cff8dccd3e7c63",
        "z": "97fe2bfd9d427697",
        "name": "process (brewing)",
        "env": [],
        "x": 2150,
        "y": 360,
        "wires": [
            [],
            []
        ]
    },
    {
        "id": "f4ef30565793f327",
        "type": "subflow:c9cff8dccd3e7c63",
        "z": "97fe2bfd9d427697",
        "name": "production batch",
        "env": [],
        "x": 2430,
        "y": 360,
        "wires": [
            [],
            []
        ]
    },
    {
        "id": "2642d7d8ba5ceeea",
        "type": "comment",
        "z": "97fe2bfd9d427697",
        "name": "bakery ",
        "info": "",
        "x": 530,
        "y": 300,
        "wires": []
    },
    {
        "id": "5fe4d10c9ad3f983",
        "type": "comment",
        "z": "97fe2bfd9d427697",
        "name": "ibrida",
        "info": "",
        "x": 990,
        "y": 300,
        "wires": []
    },
    {
        "id": "062a12e3b176d82a",
        "type": "comment",
        "z": "97fe2bfd9d427697",
        "name": "ibrida",
        "info": "",
        "x": 1170,
        "y": 300,
        "wires": []
    },
    {
        "id": "31617092da65c4bb",
        "type": "comment",
        "z": "97fe2bfd9d427697",
        "name": "bakery to ibrida",
        "info": "",
        "x": 800,
        "y": 300,
        "wires": []
    },
    {
        "id": "f71182e6a7294e6f",
        "type": "comment",
        "z": "97fe2bfd9d427697",
        "name": "ibrida",
        "info": "",
        "x": 1350,
        "y": 300,
        "wires": []
    },
    {
        "id": "9fe105889c193fa2",
        "type": "comment",
        "z": "97fe2bfd9d427697",
        "name": "ibrida",
        "info": "",
        "x": 1510,
        "y": 300,
        "wires": []
    },
    {
        "id": "1852a5cbcdfdcc01",
        "type": "subflow:c9cff8dccd3e7c63",
        "z": "97fe2bfd9d427697",
        "name": "recipe (brewing)",
        "env": [],
        "x": 2140,
        "y": 240,
        "wires": [
            [],
            []
        ]
    },
    {
        "id": "9823cbd829b19272",
        "type": "comment",
        "z": "97fe2bfd9d427697",
        "name": "brewery",
        "info": "",
        "x": 1690,
        "y": 300,
        "wires": []
    },
    {
        "id": "18517b9d82f6c05b",
        "type": "comment",
        "z": "97fe2bfd9d427697",
        "name": "brewery",
        "info": "",
        "x": 2110,
        "y": 140,
        "wires": []
    },
    {
        "id": "a619b4eeaa1208bf",
        "type": "comment",
        "z": "97fe2bfd9d427697",
        "name": "brewery",
        "info": "",
        "x": 2390,
        "y": 240,
        "wires": []
    },
    {
        "id": "cae4a92f48298065",
        "type": "subflow:c9cff8dccd3e7c63",
        "z": "97fe2bfd9d427697",
        "name": "produce - create",
        "env": [],
        "x": 570,
        "y": 360,
        "wires": [
            [],
            []
        ]
    },
    {
        "id": "f211726934f12e18",
        "type": "ui_button",
        "z": "7a9a689b1b991e15",
        "name": "",
        "group": "1bf8ea68f62a96fd",
        "order": 3,
        "width": 0,
        "height": 0,
        "passthru": false,
        "label": "query Economic Resources",
        "tooltip": "",
        "color": "",
        "bgcolor": "",
        "className": "",
        "icon": "",
        "payload": "",
        "payloadType": "str",
        "topic": "topic",
        "topicType": "msg",
        "x": 140,
        "y": 380,
        "wires": [
            [
                "db36c514d532545a"
            ]
        ]
    },
    {
        "id": "db36c514d532545a",
        "type": "graphql",
        "z": "7a9a689b1b991e15",
        "name": "query economicResources",
        "graphql": "e0d0143ee4f650a7",
        "format": "text",
        "syntax": "plain",
        "template": "query economicResources {\n  economicResources {\n    id\n    image\n    name\n    note\n    onhandQuantity {\n      hasNumericalValue\n    }\n    accountingQuantity {\n      hasNumericalValue\n      hasUnit {\n        canonicalUrl\n        id\n        label\n        symbol\n      }\n      id\n    }\n  }\n}",
        "showDebug": false,
        "x": 420,
        "y": 380,
        "wires": [
            [
                "775506a6b1c7e552",
                "7cac6463fcc1333a"
            ],
            []
        ]
    },
    {
        "id": "b6295a9427dc1afb",
        "type": "inject",
        "z": "7a9a689b1b991e15",
        "name": "resourceSpecifications",
        "props": [
            {
                "p": "authorization",
                "v": "bearer",
                "vt": "global"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "x": 140,
        "y": 440,
        "wires": [
            []
        ]
    },
    {
        "id": "b25038c12ad7a001",
        "type": "debug",
        "z": "7a9a689b1b991e15",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 890,
        "y": 360,
        "wires": []
    },
    {
        "id": "223307711643217c",
        "type": "graphql",
        "z": "7a9a689b1b991e15",
        "name": "economicResource",
        "graphql": "e0d0143ee4f650a7",
        "format": "handlebars",
        "syntax": "mustache",
        "template": "query MyQuery {\n  economicResource(id: \"{{payload}}\") {\n    name\n    note\n    onhandQuantity {\n      hasNumericalValue\n    }\n  }\n}\n",
        "showDebug": false,
        "x": 470,
        "y": 560,
        "wires": [
            [
                "4ce122dbbd1de7b5",
                "72fe0c9438dc610f"
            ],
            []
        ]
    },
    {
        "id": "16cb3bbfc07b6872",
        "type": "inject",
        "z": "7a9a689b1b991e15",
        "name": "01FNRPYRXK8MEVMR0SQQSD0QPC",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "authorization",
                "v": "bearer",
                "vt": "global"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "01FNRPYRXK8MEVMR0SQQSD0QPC",
        "payloadType": "str",
        "x": 190,
        "y": 620,
        "wires": [
            []
        ]
    },
    {
        "id": "7838d4fad724fe1c",
        "type": "ui_template",
        "z": "7a9a689b1b991e15",
        "group": "1bf8ea68f62a96fd",
        "name": "",
        "order": 3,
        "width": "10",
        "height": "10",
        "format": "<div ng-bind-html=\"msg.payload\"></div>",
        "storeOutMessages": false,
        "fwdInMessages": false,
        "resendOnRefresh": false,
        "templateScope": "local",
        "className": "",
        "x": 880,
        "y": 400,
        "wires": [
            []
        ]
    },
    {
        "id": "775506a6b1c7e552",
        "type": "template",
        "z": "7a9a689b1b991e15",
        "name": "",
        "field": "payload",
        "fieldType": "msg",
        "format": "handlebars",
        "syntax": "mustache",
        "template": "{{#payload.economicResources}}\n      {{id}} {{name}} {{note}} {{onhandQuantity.hasNumericalValue}}\n{{/payload.economicResources}}",
        "output": "str",
        "x": 660,
        "y": 400,
        "wires": [
            [
                "b25038c12ad7a001",
                "7838d4fad724fe1c"
            ]
        ]
    },
    {
        "id": "7cac6463fcc1333a",
        "type": "debug",
        "z": "7a9a689b1b991e15",
        "name": "",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 670,
        "y": 340,
        "wires": []
    },
    {
        "id": "169c08603ceead08",
        "type": "debug",
        "z": "7a9a689b1b991e15",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 910,
        "y": 520,
        "wires": []
    },
    {
        "id": "db48253c98890113",
        "type": "ui_text_input",
        "z": "7a9a689b1b991e15",
        "name": "",
        "label": "",
        "tooltip": "query a resource",
        "group": "1bf8ea68f62a96fd",
        "order": 2,
        "width": 0,
        "height": 0,
        "passthru": true,
        "mode": "text",
        "delay": 300,
        "topic": "payload",
        "sendOnBlur": true,
        "className": "",
        "topicType": "msg",
        "x": 180,
        "y": 560,
        "wires": [
            [
                "223307711643217c"
            ]
        ]
    },
    {
        "id": "4ce122dbbd1de7b5",
        "type": "template",
        "z": "7a9a689b1b991e15",
        "name": "",
        "field": "payload",
        "fieldType": "msg",
        "format": "handlebars",
        "syntax": "mustache",
        "template": "{{#payload.economicResource}}\n      {{name}} {{note}} {{onhandQuantity.hasNumericalValue}}\n{{/payload.economicResource}}",
        "output": "str",
        "x": 680,
        "y": 580,
        "wires": [
            [
                "8f366b427006fe17",
                "169c08603ceead08"
            ]
        ]
    },
    {
        "id": "8f366b427006fe17",
        "type": "ui_template",
        "z": "7a9a689b1b991e15",
        "group": "1bf8ea68f62a96fd",
        "name": "",
        "order": 3,
        "width": "10",
        "height": "10",
        "format": "<div ng-bind-html=\"msg.payload\"></div>",
        "storeOutMessages": false,
        "fwdInMessages": false,
        "resendOnRefresh": false,
        "templateScope": "local",
        "className": "",
        "x": 900,
        "y": 580,
        "wires": [
            []
        ]
    },
    {
        "id": "72fe0c9438dc610f",
        "type": "debug",
        "z": "7a9a689b1b991e15",
        "name": "",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 690,
        "y": 520,
        "wires": []
    },
    {
        "id": "b582df30a9d2445c",
        "type": "debug",
        "z": "a9cf961a3a52160c",
        "name": "",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 570,
        "y": 500,
        "wires": []
    },
    {
        "id": "d77006acee54af34",
        "type": "http in",
        "z": "a9cf961a3a52160c",
        "name": "Form",
        "url": "/isolationgowns/login",
        "method": "post",
        "upload": false,
        "swaggerDoc": "",
        "x": 50,
        "y": 200,
        "wires": [
            [
                "01f2e8dd1ac14440"
            ]
        ]
    },
    {
        "id": "d4b609db9190632b",
        "type": "function",
        "z": "a9cf961a3a52160c",
        "name": "Retrieve id",
        "func": "// Read the payload\nmsg.credentials = {};\nmsg.credentials.token = msg.payload.data.login.token;\n\n\n// Reset the headears\nmsg.headers = {};\nmsg.headers['content-type'] = 'application/json';\nmsg.headers['authorization'] = \"Bearer \" + msg.credentials.token;\n\n// These are already set and payload is not valid anymore\n// msg.url = msg.payload.endpoint;\n// msg.method = 'POST';\n\n\n// This is going to destroy the msg.payload!!!\nmsg.payload = JSON.stringify({\n  query: `query{\n            myAgent{\n                id\n            }\n          }`,\n  variables: {}\n})\n\n\nreturn msg;\n\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 570,
        "y": 200,
        "wires": [
            [
                "232a28ed71fceec6"
            ]
        ]
    },
    {
        "id": "01f2e8dd1ac14440",
        "type": "function",
        "z": "a9cf961a3a52160c",
        "name": "Login Agent",
        "func": "\n\nmsg.headers = {};\nmsg.headers['content-type'] = 'application/json';\n\nmsg.url = msg.payload.endpoint;\nmsg.method = 'POST';\n\n// This is going to destroy the msg.payload!!!\nmsg.payload = JSON.stringify({\n  query: `mutation doLogin($username: String!, $password: String!) {\n            login(emailOrUsername: $username, password: $password) {\n                token\n            }\n          }`,\n  variables: {\"username\": msg.payload.username,\n              \"password\": msg.payload.password}\n})\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 210,
        "y": 200,
        "wires": [
            [
                "ced9f63df845af74"
            ]
        ]
    },
    {
        "id": "ced9f63df845af74",
        "type": "http request",
        "z": "a9cf961a3a52160c",
        "name": "",
        "method": "use",
        "ret": "obj",
        "paytoqs": "ignore",
        "url": "",
        "tls": "",
        "persist": false,
        "proxy": "",
        "authType": "",
        "senderr": false,
        "x": 370,
        "y": 200,
        "wires": [
            [
                "d4b609db9190632b"
            ]
        ]
    },
    {
        "id": "232a28ed71fceec6",
        "type": "http request",
        "z": "a9cf961a3a52160c",
        "name": "",
        "method": "use",
        "ret": "obj",
        "paytoqs": "ignore",
        "url": "",
        "tls": "",
        "persist": false,
        "proxy": "",
        "authType": "",
        "senderr": false,
        "x": 770,
        "y": 200,
        "wires": [
            [
                "bbeba4dd2bc281e6"
            ]
        ]
    },
    {
        "id": "6b9a303ec68aaf47",
        "type": "function",
        "z": "a9cf961a3a52160c",
        "name": "Create Unit",
        "func": "// Reset the headears\nmsg.headers = {};\nmsg.headers['content-type'] = 'application/json';\nmsg.headers['authorization'] = \"Bearer \" + msg.payload.token;\n\n\nmsg.url = msg.payload.endpoint;\nmsg.method = 'POST';\n\nconst label = msg.payload.label;\nconst symbol = msg.payload.symbol;\n\n// This is going to destroy the msg.payload!!!\nmsg.payload = JSON.stringify({\n  query: `mutation($unit:UnitCreateParams!) {\n            createUnit(unit: $unit) {\n                unit {\n                    id\n                }\n            }\n          }`,\n  variables: {\"unit\": {\n                        \"label\": label,\n                        \"symbol\": symbol\n                        }\n            }\n})\n\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 210,
        "y": 360,
        "wires": [
            [
                "41a31f091965c362"
            ]
        ]
    },
    {
        "id": "41a31f091965c362",
        "type": "http request",
        "z": "a9cf961a3a52160c",
        "name": "",
        "method": "use",
        "ret": "obj",
        "paytoqs": "ignore",
        "url": "",
        "tls": "",
        "persist": false,
        "proxy": "",
        "authType": "",
        "senderr": false,
        "x": 410,
        "y": 360,
        "wires": [
            [
                "8aafa40d09d8bbe7"
            ]
        ]
    },
    {
        "id": "8aafa40d09d8bbe7",
        "type": "change",
        "z": "a9cf961a3a52160c",
        "name": "Set Unit",
        "rules": [
            {
                "t": "set",
                "p": "unit",
                "pt": "flow",
                "to": "payload.data.createUnit.unit.id",
                "tot": "msg",
                "dc": true
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 580,
        "y": 360,
        "wires": [
            [
                "7e3394bb6ca1da06"
            ]
        ]
    },
    {
        "id": "cae81b35069f60a9",
        "type": "function",
        "z": "a9cf961a3a52160c",
        "name": "Create Location",
        "func": "// Reset the headears\nmsg.headers = {};\nmsg.headers['content-type'] = 'application/json';\nmsg.headers['authorization'] = \"Bearer \" + msg.payload.token;\n\nmsg.url = msg.payload.endpoint;\nmsg.method = 'POST';\n\nconst name = msg.payload.name;\nconst lat = msg.payload.lat;\nconst long = msg.payload.long;\nconst addr = msg.payload.addr;\nconst note = msg.payload.note;\n\n\n// This is going to destroy the msg.payload!!!\nmsg.payload = JSON.stringify({\n    query: `mutation($location: SpatialThingCreateParams!) {\n            createSpatialThing(spatialThing: $location) {\n                spatialThing {\n                    id\n                }\n            }\n        }`,\n    variables: {\n        \"location\": {\n            \"name\": name,\n            \"alt\": 0,\n            \"lat\": lat,\n            \"long\": long,\n            \"mappableAddress\": addr,\n            \"note\": note\n        }\n    }\n})\n\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 220,
        "y": 280,
        "wires": [
            [
                "cd0d405b431a7cdc"
            ]
        ]
    },
    {
        "id": "cd0d405b431a7cdc",
        "type": "http request",
        "z": "a9cf961a3a52160c",
        "name": "",
        "method": "use",
        "ret": "obj",
        "paytoqs": "ignore",
        "url": "",
        "tls": "",
        "persist": false,
        "proxy": "",
        "authType": "",
        "senderr": false,
        "x": 410,
        "y": 280,
        "wires": [
            [
                "122698bde7168a3b"
            ]
        ]
    },
    {
        "id": "e7f96084acdd0aa2",
        "type": "function",
        "z": "a9cf961a3a52160c",
        "name": "Create Process",
        "func": "// Reset the headears\nmsg.headers = {};\nmsg.headers['content-type'] = 'application/json';\nmsg.headers['authorization'] = \"Bearer \" + msg.payload.token;\n\n\nmsg.url = msg.payload.endpoint;\nmsg.method = 'POST';\n\nconst name = msg.payload.process_name;\nconst note = msg.payload.process_note;\n\nconst ts = new Date(Date.now());\n\n// This is going to destroy the msg.payload!!!\nmsg.payload = JSON.stringify({\n  query: `mutation($process:ProcessCreateParams!) {\n\t  createProcess(process: $process) {\n\t\tprocess {\n\t\t  id\n\t\t}\n\t  }\n\t}\n`,\n  variables: {\n      \"process\": {\n        \"name\": name,\n        \"note\": note,\n        \"hasBeginning\": ts,\n        \"hasEnd\": ts\n      }\n  }\n})\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 220,
        "y": 580,
        "wires": [
            [
                "cf36936a5c75bfd6"
            ]
        ]
    },
    {
        "id": "6196df0943914213",
        "type": "http response",
        "z": "a9cf961a3a52160c",
        "name": "",
        "statusCode": "",
        "headers": {},
        "x": 1150,
        "y": 200,
        "wires": []
    },
    {
        "id": "bbeba4dd2bc281e6",
        "type": "function",
        "z": "a9cf961a3a52160c",
        "name": "Format Reply",
        "func": "// Read the payload\nmsg.credentials.id = msg.payload.data.myAgent.id;\n\n// Provide an answer\nmsg.payload = {};\nmsg.payload.token = msg.credentials.token;\nmsg.payload.id = msg.credentials.id;\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 980,
        "y": 200,
        "wires": [
            [
                "6196df0943914213"
            ]
        ]
    },
    {
        "id": "62143c0efd3e2261",
        "type": "http in",
        "z": "a9cf961a3a52160c",
        "name": "Form",
        "url": "/isolationgowns/location",
        "method": "post",
        "upload": false,
        "swaggerDoc": "",
        "x": 50,
        "y": 280,
        "wires": [
            [
                "cae81b35069f60a9"
            ]
        ]
    },
    {
        "id": "85edf2b45871f9bd",
        "type": "http response",
        "z": "a9cf961a3a52160c",
        "name": "",
        "statusCode": "",
        "headers": {},
        "x": 830,
        "y": 280,
        "wires": []
    },
    {
        "id": "122698bde7168a3b",
        "type": "function",
        "z": "a9cf961a3a52160c",
        "name": "Format Reply",
        "func": "// Read the payload\nconst location = msg.payload.data.createSpatialThing.spatialThing.id;\n\nmsg.payload = {};\nmsg.payload.location = location;\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 640,
        "y": 280,
        "wires": [
            [
                "85edf2b45871f9bd"
            ]
        ]
    },
    {
        "id": "cf3e88999b724618",
        "type": "comment",
        "z": "a9cf961a3a52160c",
        "name": "Perform Login",
        "info": "",
        "x": 70,
        "y": 140,
        "wires": []
    },
    {
        "id": "9927f0b45d15344b",
        "type": "http in",
        "z": "a9cf961a3a52160c",
        "name": "Form",
        "url": "/isolationgowns/unit",
        "method": "post",
        "upload": false,
        "swaggerDoc": "",
        "x": 50,
        "y": 360,
        "wires": [
            [
                "6b9a303ec68aaf47"
            ]
        ]
    },
    {
        "id": "7e3394bb6ca1da06",
        "type": "function",
        "z": "a9cf961a3a52160c",
        "name": "Format Reply",
        "func": "// Read the payload\nconst unit = msg.payload.data.createUnit.unit.id;\n\nmsg.payload = {};\nmsg.payload.unit = unit;\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 780,
        "y": 360,
        "wires": [
            [
                "71f92c67ca67af48"
            ]
        ]
    },
    {
        "id": "71f92c67ca67af48",
        "type": "http response",
        "z": "a9cf961a3a52160c",
        "name": "",
        "statusCode": "",
        "headers": {},
        "x": 930,
        "y": 360,
        "wires": []
    },
    {
        "id": "72c05c5c0bd10d12",
        "type": "http response",
        "z": "a9cf961a3a52160c",
        "name": "",
        "statusCode": "",
        "headers": {},
        "x": 890,
        "y": 440,
        "wires": []
    },
    {
        "id": "04c370bd35360547",
        "type": "function",
        "z": "a9cf961a3a52160c",
        "name": "Format Reply",
        "func": "const eventId = msg.payload.data.createEconomicEvent.economicEvent.id;\nconst resourceIn = msg.payload.data.createEconomicEvent.economicEvent.resourceInventoriedAs;\nconst resourceOut = msg.payload.data.createEconomicEvent.economicEvent.toResourceInventoriedAs;\n\n\nmsg.payload = {};\nmsg.payload.eventId = eventId;\nmsg.payload.resourceIn = resourceIn;\nmsg.payload.resourceOut = resourceOut;\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 660,
        "y": 440,
        "wires": [
            [
                "72c05c5c0bd10d12"
            ]
        ]
    },
    {
        "id": "75ad1ae27b0775fb",
        "type": "http request",
        "z": "a9cf961a3a52160c",
        "name": "",
        "method": "use",
        "ret": "obj",
        "paytoqs": "ignore",
        "url": "",
        "tls": "",
        "persist": false,
        "proxy": "",
        "authType": "",
        "senderr": false,
        "x": 410,
        "y": 440,
        "wires": [
            [
                "b582df30a9d2445c",
                "04c370bd35360547"
            ]
        ]
    },
    {
        "id": "62fcaf5db019d842",
        "type": "function",
        "z": "a9cf961a3a52160c",
        "name": "Create Resource",
        "func": "// Reset the headears\nmsg.headers = {};\nmsg.headers['content-type'] = 'application/json';\nmsg.headers['authorization'] = \"Bearer \" + msg.payload.token;\n\n\nmsg.url = msg.payload.endpoint;\nmsg.method = 'POST';\n\nconst agent_id = msg.payload.agent_id;\nconst resource_id = msg.payload.resource_id;\nconst unit_id = msg.payload.unit_id;\nconst amount = msg.payload.amount;\nconst resource_name = msg.payload.resource_name;\n\n// This is going to destroy the msg.payload!!!\nmsg.payload = JSON.stringify({\n  query:    `mutation($event:EconomicEventCreateParams!, $newInventoriedResource:EconomicResourceCreateParams) {\n                createEconomicEvent(event:$event, newInventoriedResource:$newInventoriedResource) {\n                    economicEvent {\n                        id\n                        provider {\n                            id\n                            name\n                            note\n                        }\n                        resourceQuantity {\n                            hasNumericalValue\n                            hasUnit {\n                                label\n                                symbol\n                            }\n                        }\n                        toResourceInventoriedAs { \n                            id\n                            name\n                            onhandQuantity {\n                                hasNumericalValue\n                                hasUnit {\n                                    label\n                                    symbol\n                                }\n                            }\n                            accountingQuantity {\n                                hasNumericalValue\n                                hasUnit {\n                                    label\n                                    symbol\n                                }\n                            }\n                        }\n                        resourceInventoriedAs {\n                            id\n                            name\n                            onhandQuantity {\n                                hasNumericalValue\n                                hasUnit {\n                                    label\n                                    symbol\n                                }\n                            }\n                            accountingQuantity {\n                                hasNumericalValue\n                                hasUnit {\n                                    label\n                                    symbol\n                                }\n                            }\n                        }\n                    }\n                }\n            }`,\n    variables: {\n        \"event\": {\n            \"note\": \"update event\",\n            \"action\": \"raise\",\n            \"provider\": agent_id, \n            \"receiver\": agent_id, \n            \"resourceInventoriedAs\": resource_id,\n            \"resourceQuantity\": {\n              \"hasUnit\": unit_id, \n              \"hasNumericalValue\": amount \n            }\n        },\n        \"newInventoriedResource\": { \n            \"name\": resource_name\n        }\n    }\n})\n\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 230,
        "y": 440,
        "wires": [
            [
                "75ad1ae27b0775fb"
            ]
        ]
    },
    {
        "id": "13197e6bea34f939",
        "type": "http in",
        "z": "a9cf961a3a52160c",
        "name": "Form",
        "url": "/isolationgowns/resource",
        "method": "post",
        "upload": false,
        "swaggerDoc": "",
        "x": 50,
        "y": 440,
        "wires": [
            [
                "62fcaf5db019d842"
            ]
        ]
    },
    {
        "id": "ec61e56c21eb3e9f",
        "type": "function",
        "z": "a9cf961a3a52160c",
        "name": "Format Reply",
        "func": "const processId = msg.payload.data.createProcess.process.id;\n\n\nmsg.payload = {};\nmsg.payload.processId = processId;\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 660,
        "y": 580,
        "wires": [
            [
                "c3e3e6232d39d1b6"
            ]
        ]
    },
    {
        "id": "cf36936a5c75bfd6",
        "type": "http request",
        "z": "a9cf961a3a52160c",
        "name": "",
        "method": "use",
        "ret": "obj",
        "paytoqs": "ignore",
        "url": "",
        "tls": "",
        "persist": false,
        "proxy": "",
        "authType": "",
        "senderr": false,
        "x": 410,
        "y": 580,
        "wires": [
            [
                "6905f51ee38526b3",
                "ec61e56c21eb3e9f"
            ]
        ]
    },
    {
        "id": "c3e3e6232d39d1b6",
        "type": "http response",
        "z": "a9cf961a3a52160c",
        "name": "",
        "statusCode": "",
        "headers": {},
        "x": 890,
        "y": 580,
        "wires": []
    },
    {
        "id": "6905f51ee38526b3",
        "type": "debug",
        "z": "a9cf961a3a52160c",
        "name": "",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 570,
        "y": 640,
        "wires": []
    },
    {
        "id": "b82c72a08c1a9fde",
        "type": "http in",
        "z": "a9cf961a3a52160c",
        "name": "Form",
        "url": "/isolationgowns/process",
        "method": "post",
        "upload": false,
        "swaggerDoc": "",
        "x": 50,
        "y": 580,
        "wires": [
            [
                "e7f96084acdd0aa2"
            ]
        ]
    },
    {
        "id": "71e1a605b5ded04e",
        "type": "http response",
        "z": "a9cf961a3a52160c",
        "name": "",
        "statusCode": "",
        "headers": {},
        "x": 890,
        "y": 720,
        "wires": []
    },
    {
        "id": "ec313c7bf8cd91cf",
        "type": "function",
        "z": "a9cf961a3a52160c",
        "name": "Format Reply",
        "func": "const transferID = msg.payload.data.createEconomicEvent.economicEvent.id;\n\n\nmsg.payload = {};\nmsg.payload.transferID = transferID;\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 660,
        "y": 720,
        "wires": [
            [
                "71e1a605b5ded04e"
            ]
        ]
    },
    {
        "id": "1f51d816c9254a8e",
        "type": "http request",
        "z": "a9cf961a3a52160c",
        "name": "",
        "method": "use",
        "ret": "obj",
        "paytoqs": "ignore",
        "url": "",
        "tls": "",
        "persist": false,
        "proxy": "",
        "authType": "",
        "senderr": false,
        "x": 410,
        "y": 720,
        "wires": [
            [
                "78bbd41a6c118d6b",
                "ec313c7bf8cd91cf"
            ]
        ]
    },
    {
        "id": "78bbd41a6c118d6b",
        "type": "debug",
        "z": "a9cf961a3a52160c",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 570,
        "y": 780,
        "wires": []
    },
    {
        "id": "26c12da433641d7d",
        "type": "http in",
        "z": "a9cf961a3a52160c",
        "name": "Form",
        "url": "/isolationgowns/transfer",
        "method": "post",
        "upload": false,
        "swaggerDoc": "",
        "x": 50,
        "y": 720,
        "wires": [
            [
                "e6a4ec239be873e1",
                "78bbd41a6c118d6b"
            ]
        ]
    },
    {
        "id": "e6a4ec239be873e1",
        "type": "function",
        "z": "a9cf961a3a52160c",
        "name": "Transfer Custody",
        "func": "// Reset the headears\nmsg.headers = {};\nmsg.headers['content-type'] = 'application/json';\nmsg.headers['authorization'] = \"Bearer \" + msg.payload.token;\n\n\nmsg.url = msg.payload.endpoint;\nmsg.method = 'POST';\n\nconst note = msg.payload.note;\nconst provider_id = msg.payload.provider_id;\nconst receiver_id = msg.payload.receiver_id;\nconst resource_id = msg.payload.resource_id;\nconst unit_id = msg.payload.unit_id;\nconst amount = msg.payload.amount;\nconst location_id = msg.payload.location_id;\nconst name = msg.payload.name;\n\nconst ts = new Date(Date.now());\n\n// This is going to destroy the msg.payload!!!\nmsg.payload = JSON.stringify({\n  query:    `mutation($event:EconomicEventCreateParams!) {\n                createEconomicEvent(event:$event) {\n                    economicEvent {\n                        id\n                        provider {\n                            id\n                            name\n                            note\n                        }\n                        resourceQuantity {\n                            hasNumericalValue\n                            hasUnit {\n                                label\n                                symbol\n                            }\n                        }\n                        toResourceInventoriedAs { \n                            id\n                            name\n                            onhandQuantity {\n                                hasNumericalValue\n                                hasUnit {\n                                    label\n                                    symbol\n                                }\n                            }\n                            accountingQuantity {\n                                hasNumericalValue\n                                hasUnit {\n                                    label\n                                    symbol\n                                }\n                            }\n                            primaryAccountable {\n                            id\n                          }\n                        }\n                        resourceInventoriedAs {\n                            id\n                            name\n                            onhandQuantity {\n                                hasNumericalValue\n                                hasUnit {\n                                    label\n                                    symbol\n                                }\n                            }\n                            accountingQuantity {\n                                hasNumericalValue\n                                hasUnit {\n                                    label\n                                    symbol\n                                }\n                            }\n                            primaryAccountable {\n                            id\n                          }\n                        }\n                    }\n                }\n            }`,\n    variables: {\n        \"event\": {\n            \"note\": note,\n            \"action\": \"transfer-custody\",\n            \"provider\": provider_id, \n            \"receiver\": receiver_id, \n            \"toResourceInventoriedAs\": resource_id,\n            \"hasPointInTime\": ts,\n            \"atLocation\": location_id,\n            \"resourceQuantity\": {\n              \"hasUnit\": unit_id, \n              \"hasNumericalValue\": amount \n            }\n        },\n        \"newInventoriedResource\": { \n            \"name\": name\n        }\n    }\n})\n\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 210,
        "y": 720,
        "wires": [
            [
                "1f51d816c9254a8e"
            ]
        ]
    },
    {
        "id": "fe5db33a07f08de1",
        "type": "http response",
        "z": "a9cf961a3a52160c",
        "name": "",
        "statusCode": "",
        "headers": {},
        "x": 890,
        "y": 840,
        "wires": []
    },
    {
        "id": "d1f6e59d5ba1e759",
        "type": "function",
        "z": "a9cf961a3a52160c",
        "name": "Format Reply",
        "func": "const eventId = msg.payload.data.createEconomicEvent.economicEvent.id;\n\n\nmsg.payload = {};\nmsg.payload.eventId = eventId;\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 660,
        "y": 840,
        "wires": [
            [
                "fe5db33a07f08de1"
            ]
        ]
    },
    {
        "id": "9395b1d5f101d921",
        "type": "http request",
        "z": "a9cf961a3a52160c",
        "name": "",
        "method": "use",
        "ret": "obj",
        "paytoqs": "ignore",
        "url": "",
        "tls": "",
        "persist": false,
        "proxy": "",
        "authType": "",
        "senderr": false,
        "x": 410,
        "y": 840,
        "wires": [
            [
                "2fdd738ccee21e9c",
                "d1f6e59d5ba1e759"
            ]
        ]
    },
    {
        "id": "1239e8ccc0e65584",
        "type": "function",
        "z": "a9cf961a3a52160c",
        "name": "Create Event",
        "func": "// Reset the headears\nmsg.headers = {};\nmsg.headers['content-type'] = 'application/json';\nmsg.headers['authorization'] = \"Bearer \" + msg.payload.token;\n\n\nmsg.url = msg.payload.endpoint;\nmsg.method = 'POST';\n\nvar variables = {\n        \"event\": {\n            \"note\": msg.payload.note,\n            \"action\": msg.payload.action\n        }\n};\n\nif ( msg.payload.provider_id != undefined ){\n    variables.event.provider = msg.payload.provider_id;\n}\n\nif ( msg.payload.receiver_id != undefined ){\n    variables.event.receiver = msg.payload.receiver_id;\n}\n\nif ( msg.payload.processIn_id != undefined ){\n    variables.event.inputOf = msg.payload.processIn_id;\n}\n\nif ( msg.payload.processOut_id != undefined ){\n    variables.event.outputOf = msg.payload.processOut_id;\n}\n\nif ( msg.payload.unit_id != undefined && msg.payload.amount != undefined){\n    variables.event.resourceQuantity = {};\n    variables.event.resourceQuantity.hasUnit = msg.payload.unit_id;\n    variables.event.resourceQuantity.hasNumericalValue = msg.payload.amount;\n}\n\nif ( msg.payload.resource_id != undefined ){\n    variables.event.resourceInventoriedAs = msg.payload.resource_id;\n}\n\n// This is going to destroy the msg.payload!!!\nmsg.payload = JSON.stringify({\n  query:    `mutation($event:EconomicEventCreateParams!) {\n                createEconomicEvent(event:$event) {\n                    economicEvent {\n                        id\n                        provider {\n                            id\n                            name\n                            note\n                        }\n                        resourceQuantity {\n                            hasNumericalValue\n                            hasUnit {\n                                label\n                                symbol\n                            }\n                        }\n                        toResourceInventoriedAs { \n                            id\n                            name\n                            onhandQuantity {\n                                hasNumericalValue\n                                hasUnit {\n                                    label\n                                    symbol\n                                }\n                            }\n                            accountingQuantity {\n                                hasNumericalValue\n                                hasUnit {\n                                    label\n                                    symbol\n                                }\n                            }\n                            primaryAccountable {\n                            id\n                          }\n                        }\n                        resourceInventoriedAs {\n                            id\n                            name\n                            onhandQuantity {\n                                hasNumericalValue\n                                hasUnit {\n                                    label\n                                    symbol\n                                }\n                            }\n                            accountingQuantity {\n                                hasNumericalValue\n                                hasUnit {\n                                    label\n                                    symbol\n                                }\n                            }\n                            primaryAccountable {\n                            id\n                          }\n                        }\n                    }\n                }\n            }`,\n    variables: variables\n})\n\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 190,
        "y": 840,
        "wires": [
            [
                "9395b1d5f101d921"
            ]
        ]
    },
    {
        "id": "2fdd738ccee21e9c",
        "type": "debug",
        "z": "a9cf961a3a52160c",
        "name": "",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 570,
        "y": 900,
        "wires": []
    },
    {
        "id": "1b77e1551252bd55",
        "type": "http in",
        "z": "a9cf961a3a52160c",
        "name": "Form",
        "url": "/isolationgowns/event",
        "method": "post",
        "upload": false,
        "swaggerDoc": "",
        "x": 50,
        "y": 840,
        "wires": [
            [
                "1239e8ccc0e65584",
                "2fdd738ccee21e9c"
            ]
        ]
    }
]